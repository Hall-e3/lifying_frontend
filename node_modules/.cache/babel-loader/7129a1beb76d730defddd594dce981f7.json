{"ast":null,"code":"import { confirmationEmailCode, loginPost, registerPost } from \"../api\";\nimport { USER_REGISTER_LOADING, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_LOGIN_LOADING, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_CONFIRM_LOADING, USER_CONFIRM_SUCCESS, USER_CONFIRM_FAIL } from \"./types\";\nexport const registerData = formData => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_LOADING\n    });\n    const {\n      data\n    } = await registerPost(formData);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    if (error.response) {\n      dispatch({\n        type: USER_REGISTER_FAIL,\n        payload: error.response.data.message\n      });\n    }\n  }\n};\nexport const loginData = loginformData => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_LOADING\n    });\n    const {\n      data\n    } = await loginPost(loginformData);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    if (error.response) {\n      dispatch({\n        type: USER_LOGIN_FAIL,\n        payload: error.response.data.message\n      });\n    }\n  }\n};\nexport const confirmationCode = confirmCode => async dispatch => {\n  try {\n    dispatch({\n      type: USER_CONFIRM_LOADING\n    });\n    const {\n      data\n    } = await confirmationEmailCode(confirmCode);\n    dispatch({\n      type: USER_CONFIRM_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    if (error.response) {\n      dispatch({\n        type: USER_CONFIRM_FAIL,\n        payload: error.response.data.message\n      });\n    }\n  }\n};","map":{"version":3,"sources":["/home/enoch/codeZone/lifying_frontend/client/src/actions/auth.actions.js"],"names":["confirmationEmailCode","loginPost","registerPost","USER_REGISTER_LOADING","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_LOGIN_LOADING","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_CONFIRM_LOADING","USER_CONFIRM_SUCCESS","USER_CONFIRM_FAIL","registerData","formData","dispatch","type","data","payload","error","response","message","loginData","loginformData","confirmationCode","confirmCode"],"mappings":"AAAA,SAASA,qBAAT,EAAgCC,SAAhC,EAA2CC,YAA3C,QAA+D,QAA/D;AACA,SACEC,qBADF,EAEEC,qBAFF,EAGEC,kBAHF,EAIEC,kBAJF,EAKEC,kBALF,EAMEC,eANF,EAOEC,oBAPF,EAQEC,oBARF,EASEC,iBATF,QAUO,SAVP;AAYA,OAAO,MAAMC,YAAY,GAAIC,QAAD,IAAc,MAAOC,QAAP,IAAoB;AAC5D,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEZ;AADC,KAAD,CAAR;AAGA,UAAM;AAAEa,MAAAA;AAAF,QAAW,MAAMd,YAAY,CAACW,QAAD,CAAnC;AACAC,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEX,qBADC;AAEPa,MAAAA,OAAO,EAAED;AAFF,KAAD,CAAR;AAID,GATD,CASE,OAAOE,KAAP,EAAc;AACd,QAAIA,KAAK,CAACC,QAAV,EAAoB;AAClBL,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEV,kBADC;AAEPY,QAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI;AAFtB,OAAD,CAAR;AAID;AACF;AACF,CAlBM;AAoBP,OAAO,MAAMC,SAAS,GAAIC,aAAD,IAAmB,MAAOR,QAAP,IAAoB;AAC9D,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAET;AADC,KAAD,CAAR;AAGA,UAAM;AAAEU,MAAAA;AAAF,QAAW,MAAMf,SAAS,CAACqB,aAAD,CAAhC;AACAR,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAER,kBADC;AAEPU,MAAAA,OAAO,EAAED;AAFF,KAAD,CAAR;AAID,GATD,CASE,OAAOE,KAAP,EAAc;AACd,QAAIA,KAAK,CAACC,QAAV,EAAoB;AAClBL,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEP,eADC;AAEPS,QAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI;AAFtB,OAAD,CAAR;AAID;AACF;AACF,CAlBM;AAoBP,OAAO,MAAMG,gBAAgB,GAAIC,WAAD,IAAiB,MAAOV,QAAP,IAAoB;AACnE,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN;AADC,KAAD,CAAR;AAGA,UAAM;AAAEO,MAAAA;AAAF,QAAW,MAAMhB,qBAAqB,CAACwB,WAAD,CAA5C;AACAV,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEL,oBADC;AAEPO,MAAAA,OAAO,EAAED;AAFF,KAAD,CAAR;AAID,GATD,CASE,OAAOE,KAAP,EAAc;AACd,QAAIA,KAAK,CAACC,QAAV,EAAoB;AAClBL,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEJ,iBADC;AAEPM,QAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI;AAFtB,OAAD,CAAR;AAID;AACF;AACF,CAlBM","sourcesContent":["import { confirmationEmailCode, loginPost, registerPost } from \"../api\";\nimport {\n  USER_REGISTER_LOADING,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_LOGIN_LOADING,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_CONFIRM_LOADING,\n  USER_CONFIRM_SUCCESS,\n  USER_CONFIRM_FAIL,\n} from \"./types\";\n\nexport const registerData = (formData) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_LOADING,\n    });\n    const { data } = await registerPost(formData);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    if (error.response) {\n      dispatch({\n        type: USER_REGISTER_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  }\n};\n\nexport const loginData = (loginformData) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_LOADING,\n    });\n    const { data } = await loginPost(loginformData);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    if (error.response) {\n      dispatch({\n        type: USER_LOGIN_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  }\n};\n\nexport const confirmationCode = (confirmCode) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_CONFIRM_LOADING,\n    });\n    const { data } = await confirmationEmailCode(confirmCode);\n    dispatch({\n      type: USER_CONFIRM_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    if (error.response) {\n      dispatch({\n        type: USER_CONFIRM_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}