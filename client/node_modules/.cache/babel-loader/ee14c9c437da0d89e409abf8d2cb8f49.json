{"ast":null,"code":"import { loginPost, registerPost } from \"../api\";\nimport { USER_REGISTER_LOADING, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_LOGIN_LOADING, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_CONFIRM_LOADING, USER_CONFIRM_SUCCESS, USER_CONFIRM_FAIL } from \"./types\";\nexport const registerData = formData => async dispatch => {\n  console.log(formData);\n\n  try {\n    dispatch({\n      type: USER_REGISTER_LOADING\n    });\n    const {\n      data\n    } = await registerPost(formData);\n    console.log(data);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    if (error.response) {\n      dispatch({\n        type: USER_REGISTER_FAIL,\n        payload: error.response.data.message\n      });\n    }\n  }\n};\nexport const loginData = loginformData => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_LOADING\n    });\n    const {\n      data\n    } = await loginPost(loginformData);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    if (error.response) {\n      dispatch({\n        type: USER_LOGIN_FAIL,\n        payload: error.response.data.message\n      });\n    }\n  }\n};\nexport const confirmCode = confirmCode => async dispatch => {\n  try {\n    dispatch({\n      type: USER_CONFIRM_LOADING\n    });\n    const {\n      data\n    } = await loginPost(confirmCode);\n    dispatch({\n      type: USER_CONFIRM_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    if (error.response) {\n      dispatch({\n        type: USER_CONFIRM_FAIL,\n        payload: error.response.data.message\n      });\n    }\n  }\n};","map":{"version":3,"sources":["/home/enoch/codeZone/project_mern_memories-PART_1_and_2/client/src/actions/auth.actions.js"],"names":["loginPost","registerPost","USER_REGISTER_LOADING","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_LOGIN_LOADING","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_CONFIRM_LOADING","USER_CONFIRM_SUCCESS","USER_CONFIRM_FAIL","registerData","formData","dispatch","console","log","type","data","payload","error","response","message","loginData","loginformData","confirmCode"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,YAApB,QAAwC,QAAxC;AACA,SACEC,qBADF,EAEEC,qBAFF,EAGEC,kBAHF,EAIEC,kBAJF,EAKEC,kBALF,EAMEC,eANF,EAOEC,oBAPF,EAQEC,oBARF,EASEC,iBATF,QAUO,SAVP;AAYA,OAAO,MAAMC,YAAY,GAAIC,QAAD,IAAc,MAAOC,QAAP,IAAoB;AAC5DC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,MAAI;AACFC,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEd;AADC,KAAD,CAAR;AAGA,UAAM;AAAEe,MAAAA;AAAF,QAAW,MAAMhB,YAAY,CAACW,QAAD,CAAnC;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACAJ,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEb,qBADC;AAEPe,MAAAA,OAAO,EAAED;AAFF,KAAD,CAAR;AAID,GAVD,CAUE,OAAOE,KAAP,EAAc;AACd,QAAIA,KAAK,CAACC,QAAV,EAAoB;AAClBP,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAEZ,kBADC;AAEPc,QAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI;AAFtB,OAAD,CAAR;AAID;AACF;AACF,CApBM;AAsBP,OAAO,MAAMC,SAAS,GAAIC,aAAD,IAAmB,MAAOV,QAAP,IAAoB;AAC9D,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEX;AADC,KAAD,CAAR;AAGA,UAAM;AAAEY,MAAAA;AAAF,QAAW,MAAMjB,SAAS,CAACuB,aAAD,CAAhC;AACAV,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEV,kBADC;AAEPY,MAAAA,OAAO,EAAED;AAFF,KAAD,CAAR;AAID,GATD,CASE,OAAOE,KAAP,EAAc;AACd,QAAIA,KAAK,CAACC,QAAV,EAAoB;AAClBP,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAET,eADC;AAEPW,QAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI;AAFtB,OAAD,CAAR;AAID;AACF;AACF,CAlBM;AAoBP,OAAO,MAAMG,WAAW,GAAIA,WAAD,IAAiB,MAAOX,QAAP,IAAoB;AAC9D,MAAI;AACFA,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAER;AADC,KAAD,CAAR;AAGA,UAAM;AAAES,MAAAA;AAAF,QAAW,MAAMjB,SAAS,CAACwB,WAAD,CAAhC;AACAX,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEP,oBADC;AAEPS,MAAAA,OAAO,EAAED;AAFF,KAAD,CAAR;AAID,GATD,CASE,OAAOE,KAAP,EAAc;AACd,QAAIA,KAAK,CAACC,QAAV,EAAoB;AAClBP,MAAAA,QAAQ,CAAC;AACPG,QAAAA,IAAI,EAAEN,iBADC;AAEPQ,QAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,CAAeH,IAAf,CAAoBI;AAFtB,OAAD,CAAR;AAID;AACF;AACF,CAlBM","sourcesContent":["import { loginPost, registerPost } from \"../api\";\nimport {\n  USER_REGISTER_LOADING,\n  USER_REGISTER_SUCCESS,\n  USER_REGISTER_FAIL,\n  USER_LOGIN_LOADING,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_CONFIRM_LOADING,\n  USER_CONFIRM_SUCCESS,\n  USER_CONFIRM_FAIL,\n} from \"./types\";\n\nexport const registerData = (formData) => async (dispatch) => {\n  console.log(formData);\n  try {\n    dispatch({\n      type: USER_REGISTER_LOADING,\n    });\n    const { data } = await registerPost(formData);\n    console.log(data);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    if (error.response) {\n      dispatch({\n        type: USER_REGISTER_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  }\n};\n\nexport const loginData = (loginformData) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_LOADING,\n    });\n    const { data } = await loginPost(loginformData);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    if (error.response) {\n      dispatch({\n        type: USER_LOGIN_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  }\n};\n\nexport const confirmCode = (confirmCode) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_CONFIRM_LOADING,\n    });\n    const { data } = await loginPost(confirmCode);\n    dispatch({\n      type: USER_CONFIRM_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    if (error.response) {\n      dispatch({\n        type: USER_CONFIRM_FAIL,\n        payload: error.response.data.message,\n      });\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}