{"ast":null,"code":"import React from \"react\";\nconst initialFormData = {\n  first_name: \"\",\n  last_name: \"\",\n  email: \"\",\n  password: \"\",\n  confirm_password: \"\"\n};\nconst initialLoginFormData = {\n  email: \"\",\n  password: \"\"\n};\nconst confirmCode = {\n  email: \"\",\n  password: \"\"\n};\nexport default function FormAction() {\n  const [showPassword, setShowPassword] = React.useState(false);\n  const [formData, setFormData] = React.useState(initialFormData);\n  const [loginformData, setLoginFormData] = React.useState(initialLoginFormData);\n  const [error, setError] = React.useState(null);\n\n  const handleShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n    setLoginFormData({ ...loginformData,\n      [name]: value\n    });\n  };\n\n  const handleFormClear = () => {\n    setFormData(initialFormData);\n  };\n\n  const handleCloseError = () => {\n    setError(false);\n  };\n\n  console.log(formData);\n  console.log(loginformData);\n  return {\n    showPassword,\n    handleShowPassword,\n    formData,\n    loginformData,\n    handleInputChange,\n    handleFormClear,\n    handleCloseError,\n    error\n  };\n}","map":{"version":3,"sources":["/home/enoch/codeZone/project_mern_memories-PART_1_and_2/client/src/components/CustomForm/FormAction.js"],"names":["React","initialFormData","first_name","last_name","email","password","confirm_password","initialLoginFormData","confirmCode","FormAction","showPassword","setShowPassword","useState","formData","setFormData","loginformData","setLoginFormData","error","setError","handleShowPassword","handleInputChange","e","name","value","target","handleFormClear","handleCloseError","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,UAAU,EAAE,EADU;AAEtBC,EAAAA,SAAS,EAAE,EAFW;AAGtBC,EAAAA,KAAK,EAAE,EAHe;AAItBC,EAAAA,QAAQ,EAAE,EAJY;AAKtBC,EAAAA,gBAAgB,EAAE;AALI,CAAxB;AAOA,MAAMC,oBAAoB,GAAG;AAC3BH,EAAAA,KAAK,EAAE,EADoB;AAE3BC,EAAAA,QAAQ,EAAE;AAFiB,CAA7B;AAIA,MAAMG,WAAW,GAAG;AAClBJ,EAAAA,KAAK,EAAE,EADW;AAElBC,EAAAA,QAAQ,EAAE;AAFQ,CAApB;AAIA,eAAe,SAASI,UAAT,GAAsB;AACnC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCX,KAAK,CAACY,QAAN,CAAe,KAAf,CAAxC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,KAAK,CAACY,QAAN,CAAeX,eAAf,CAAhC;AACA,QAAM,CAACc,aAAD,EAAgBC,gBAAhB,IAAoChB,KAAK,CAACY,QAAN,CAAeL,oBAAf,CAA1C;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBlB,KAAK,CAACY,QAAN,CAAe,IAAf,CAA1B;;AACA,QAAMO,kBAAkB,GAAG,MAAM;AAC/BR,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD,GAFD;;AAGA,QAAMU,iBAAiB,GAAIC,CAAD,IAAO;AAC/B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAV,IAAAA,WAAW,CAAC,EACV,GAAGD,QADO;AAEV,OAACS,IAAD,GAAQC;AAFE,KAAD,CAAX;AAIAP,IAAAA,gBAAgB,CAAC,EACf,GAAGD,aADY;AAEf,OAACO,IAAD,GAAQC;AAFO,KAAD,CAAhB;AAID,GAVD;;AAWA,QAAME,eAAe,GAAG,MAAM;AAC5BX,IAAAA,WAAW,CAACb,eAAD,CAAX;AACD,GAFD;;AAGA,QAAMyB,gBAAgB,GAAG,MAAM;AAC7BR,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,GAFD;;AAGAS,EAAAA,OAAO,CAACC,GAAR,CAAYf,QAAZ;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAYb,aAAZ;AACA,SAAO;AACLL,IAAAA,YADK;AAELS,IAAAA,kBAFK;AAGLN,IAAAA,QAHK;AAILE,IAAAA,aAJK;AAKLK,IAAAA,iBALK;AAMLK,IAAAA,eANK;AAOLC,IAAAA,gBAPK;AAQLT,IAAAA;AARK,GAAP;AAUD","sourcesContent":["import React from \"react\";\nconst initialFormData = {\n  first_name: \"\",\n  last_name: \"\",\n  email: \"\",\n  password: \"\",\n  confirm_password: \"\",\n};\nconst initialLoginFormData = {\n  email: \"\",\n  password: \"\",\n};\nconst confirmCode = {\n  email: \"\",\n  password: \"\",\n};\nexport default function FormAction() {\n  const [showPassword, setShowPassword] = React.useState(false);\n  const [formData, setFormData] = React.useState(initialFormData);\n  const [loginformData, setLoginFormData] = React.useState(initialLoginFormData);\n  const [error, setError] = React.useState(null);\n  const handleShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n    setLoginFormData({\n      ...loginformData,\n      [name]: value,\n    })\n  };\n  const handleFormClear = () => {\n    setFormData(initialFormData);\n  };\n  const handleCloseError = () => {\n    setError(false);\n  };\n  console.log(formData);\n  console.log(loginformData);\n  return {\n    showPassword,\n    handleShowPassword,\n    formData,\n    loginformData,\n    handleInputChange,\n    handleFormClear,\n    handleCloseError,\n    error,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}